{"version":3,"sources":["Components/Home.js","redux/reducers/ApiReducer.js","redux/reducers/firstReducer.js","redux/index.js","Components/CartItem.js","Components/Cart.js","Components/history.js","Components/Item.js","Components/Shop.js","Components/Header.js","Components/ProductDetails.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","Component","apiReducer","state","initState","action","type","Products","Product","Loaded","firstReducer","Cart","concat","quantity","product","id","ProdDetails","filter","reducer","combineReducers","apiReduce","store","createStore","CartItem","props","RemoveFromCart","dispatch","itemid","undefined","moreinfo","this","unsubscribe","subscribe","forceUpdate","title","img","price","alt","src","onClick","checkOut","complete","loadingFunc","bind","total","setState","setTimeout","shippingPrice","getState","finalPrice","i","length","Number","Math","floor","map","key","uuid","createBrowserHistory","Item","AddtoCart","$","animate","marginLeft","display","history","push","to","showdetails","Shop","loading","filtered","checkVal","first","int","setInterval","document","readyState","clearInterval","event","target","value","category","onChange","Header","menu","e","clicks","slideDown","css","slideUp","showMenu","hide","ProductDetails","rating","description","App","fetch","then","res","json","exact","path","component","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3062933.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Home extends Component {\n  render() {\n    return (\n    <div className=\"home\">\n        \n        <div className=\"homebody\">\n            \n        </div>\n    </div>\n    );\n  }\n}\n\nexport default Home;","import { initState } from '../index'\n\nconst apiReducer = (state = initState, action) => {\n    if(action.type === \"INIT_API\"){\n        return {\n            ...state,\n            Products: action.Product,\n            Loaded: true\n        }\n    }else{\n        return state\n    }\n}\nexport default apiReducer","import { initState } from '../index'\n\nconst firstReducer = (state = initState, action) => {\n    if(action.type === \"ADD_ITEM\"){\n        return {\n            ...state,\n            Cart: state.Cart.concat({\n                quantity: 1,\n                product: action.product,\n                id: action.id\n            })\n        }\n    }else if (action.type === \"PROD_DETAILS\"){\n        return {\n            ...state,\n            ProdDetails: action.product,\n        }\n    }else if (action.type === \"DELETE_ITEM\"){\n        return {\n            ...state,\n            Cart: state.Cart.filter(product => product.id !== action.id),\n        }\n    }else if(action.type === \"CLEAR_DETAILS\"){\n        return{\n            ...state,\n            ProdDetails: {}\n        }\n    }else\n    {\n        return state\n    }\n   \n  \n}\nexport default firstReducer","import { createStore, combineReducers } from 'redux'\nimport apiReducer from './reducers/ApiReducer'\nimport firstReducer from './reducers/firstReducer'\n\nexport let initState = {\n    Products: [],\n    Cart: [],\n    Loaded: false,\n    ProdDetails: {}\n}\n\nconst reducer = combineReducers({\n    apiReduce: apiReducer,\n    firstReducer: firstReducer\n})\n\nconst store = createStore(reducer);\n    export default store","import React, { Component } from 'react'\nimport store from '../redux'\n\nclass CartItem extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             itemid: undefined,\n             moreinfo: false,\n             \n        }\n        \n    }\n    \n    componentDidMount(){\n        this.unsubscribe = store.subscribe(() => this.forceUpdate());\n      }\n      componentWillUnmount(){\n        this.unsubscribe();\n      }\n\n\n\n    RemoveFromCart = (product) => {\n\n        store.dispatch({\n            type: \"DELETE_ITEM\",\n            product: product,\n            id: this.props.id\n          })\n    }\n    render() {\n        const {title, img, price } = this.props.product\n        return (\n            <div className=\"cartproduct\">\n                <div className=\"carttitle\">{title}</div>\n                <img alt=\"shop item\" src={img}></img>\n                <div>${price}</div>\n                <button className=\"trashicon\"onClick={() => this.RemoveFromCart(this.props.product)}><i className=\"fas fa-trash-alt trash\"></i></button>\n            </div>\n        \n        )\n    }\n}\n\nexport default CartItem\n","\nimport React, { Component } from 'react';\nimport store from '../redux'\nimport CartItem from \"./CartItem\"\nimport uuid from 'uuid'\n\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       checkOut: false,\n       complete: false\n\n    }\n    this.loadingFunc = this.loadingFunc.bind(this)\n    this.complete = this.complete.bind(this)\n  }\n  \n  componentDidMount(){\n    this.unsubscribe = store.subscribe(() => this.forceUpdate());\n  }\n  componentWillUnmount(){\n    this.unsubscribe();\n  }\n\n  loadingFunc(total){\n    if(total === 0){\n      return;\n    }\n    this.setState({\n      checkOut: true\n    })\n    setTimeout(this.complete, 2000);\n  }\n  complete(){\n    this.setState({\n      complete: true\n    })\n\n  }\n\n  render() {\n    const Products = store.getState().firstReducer.Cart\n    var finalPrice = 0.00;\n    var shippingPrice = 0.00;\n    var total = 0.00;\n    for(let i = 0; i < Products.length; i++){\n      finalPrice += Number(Products[i].product.price)\n      \n    }\n    finalPrice = Math.floor(finalPrice)\n    shippingPrice = Math.floor(finalPrice * 0.02)\n    total = finalPrice + shippingPrice;\n   if(this.state.checkOut === false && this.state.complete === false){\n    return (\n        <div className=\"cart\">\n            <div className=\"leftCart\">\n            {Products.map(product => (\n            <CartItem product={product.product} id={product.id} key={uuid()}/>\n          ))}\n            </div>\n            <div className=\"price\">\n              <span>Total Price</span>\n              <div>\n                <div className=\"totalPrice\">\n                  <h2>Products:</h2>\n                  <h2>${finalPrice}.00</h2> \n                  </div>\n                <div className=\"totalPrice bottom-border\">\n                  <h2>Shipping:</h2> \n                  <h2>${shippingPrice}.00</h2>\n                  </div>\n                <div className=\"totalPrice\">\n                  <h2>Total: </h2>\n                  <h2>${total}</h2>\n                  </div>\n              </div>\n              <div className=\"CheckOut\" onClick={ () => this.loadingFunc(total)}>Check Out</div>\n            </div>\n        </div>\n    );\n  }else if(this.state.checkOut === true && this.state.complete === false){\n    return <div className=\"Loading\"><i className=\"fas fa-spinner\"></i></div>\n  }else if(this.state.complete === true){\n    return <div className=\"completebox\"><div className=\"complete\">Thank you for your Purchase! <i className=\"fas fa-check checkmark\"></i></div></div>\n  }\n}\n}\n\nexport default Cart;","import { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n\n})","import React, { Component } from 'react'\nimport store from '../redux'\nimport $ from 'jquery'\nimport uuid from 'uuid'\nimport history from './history'\n\n\nclass Item extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             itemid: undefined,\n             moreinfo: false,\n             \n        }\n        \n    }\n    componentDidMount(){\n        this.unsubscribe = store.subscribe(() => this.forceUpdate());\n        store.dispatch({\n            type: \"CLEAR_DETAILS\"\n        })\n      }\n      componentWillUnmount(){\n        this.unsubscribe();\n      }\n\n    showdetails(product){\n        store.dispatch({\n            type: \"PROD_DETAILS\",\n            product: product,\n        })\n        history.push(`/itemdetails/${this.props.product.id}`);\n    }\n\n    AddtoCart = (product) => {\n        store.dispatch({\n            type: \"ADD_ITEM\",\n            product: product,\n            id: uuid()\n          })\n          $(\".addCart\").animate({marginLeft: '-600px', display: 'show'}, \"slow\");\n          setTimeout(function(){ $(\".addCart\").animate({marginLeft: '0px'}, \"slow\") }, 2000);\n    }\n\n    \n    render() {\n        const {title, img, price, id } = this.props.product\n    \n        return (\n            <div className=\"product\">\n                <img alt=\"shop item\" src={img}></img>\n                <div>{title}</div>\n                <div>${price}</div>\n                <div className=\"moreinfo\">\n                    <div className=\"button\" to={`/itemdetails/${id}`}><button className=\"noBackground\" onClick={() => this.showdetails(this.props.product)}>Details</button></div>\n                    <button className=\"button noBackground\" onClick={() => this.AddtoCart(this.props.product)}>Add to Cart</button>\n                </div>\n            </div>\n        \n        )\n    }\n}\n\nexport default Item\n","import React, { Component } from 'react';\nimport store from '../redux'\nimport Item from './Item'\n\n\n\n\n\nclass Shop extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: true,\n      filtered: [],\n    }\n    this.checkVal = this.checkVal.bind(this)\n    this.first = this.first.bind(this)\n\n  }\n  \n  componentDidMount(){\n    this.unsubscribe = store.subscribe(() => this.forceUpdate());\n    this.first()\n  }\n  componentWillUnmount(){\n    this.unsubscribe();\n  }\n  first(){\n    let int = setInterval( () => {if(document.readyState === 'complete') {\n      this.setState({\n        filtered: store.getState().apiReduce.Products.map(product => (\n          <Item product={product} key={product.id}/>\n            )),\n            loading: false\n      })\n      clearInterval(int)\n  }\n    },500)\n  }\n  checkVal(event){\n    this.filtered = [];\n    let Products = store.getState().apiReduce.Products\n    if(event.target.value === \"all\"){\n      this.setState({\n        filtered: Products.map(product => (\n          <Item product={product} key={product.id}/>\n            ))\n      })\n      return;\n    }\n      for(let i = 0; i < Products.length; i++){\n        if(Products[i].category === event.target.value){\n          this.filtered.push(Products[i])\n        }\n      }\n    this.setState({\n      filtered: this.filtered.map(product => (\n        <Item product={product} key={product.id}/>\n      ))\n    })\n  }\n\n  render() {\n    if(this.state.loading === true){\n      return <div className=\"Loading\"><i className=\"fas fa-spinner\"></i></div>\n    }else if(this.state.loading === false){\n    return (\n      <div>\n            <div className=\"filter\">\n                <span>Categories:  </span>\n            <form >\n              <select id=\"filterForm\" onChange={this.checkVal}>\n                <option value=\"all\">Show All</option>\n                <option value=\"phone\">Phone</option>\n                <option value=\"tv\">Tv</option>\n                <option value=\"small-appliance\">Small-Appliance</option>\n                <option value=\"refrigerator\">Refrigerator</option>\n                <option value=\"watch\">Watch</option>\n                <option value=\"action-camera\">Action-Camera</option>\n                <option value=\"headphones\">Headphones</option>\n              </select>\n            </form>\n            \n\n            </div>\n        <div className=\"products-page\">\n          {this.state.filtered}\n          <div className=\"addCart\">Added to Cart</div>\n        </div>\n       </div>\n    );\n  }\n}\n}\n\nexport default Shop;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport $ from 'jquery';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showMenu: false,\n      clicks: 0\n    };\n  }\n  componentDidMount() {\n    $(\".menu\").hide(0);\n  }\n  menu = (e) => {\n    this.setState({clicks: this.state.clicks + 1})\n    if(this.state.clicks % 2 === 0) {\n        $(\".menu\").slideDown(200);\n        $(e.target).css(\"transform\", \"rotateZ(90deg)\")\n    } else if(this.state.clicks % 1 === 0) {\n      $(\".menu\").slideUp(200);\n      $(e.target).css(\"transform\", \"rotateZ(0deg)\")\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <div className=\"ShopName\">\n          <span>Store</span>\n        </div>\n          <div className=\"menu\">\n            <button>\n              {\" \"}\n              <Link to=\"/\">\n                <span className=\"menuitems\">Home</span>\n              </Link>{\" \"}\n            </button>\n            <button>\n              {\" \"}\n              <Link to=\"/shop\">\n                <span className=\"menuitems\">Shop</span>\n              </Link>{\" \"}\n            </button>\n            <button>\n              <Link to=\"/cart\">\n              <span className=\"menuitems\">\n                  <i className=\"fas fa-shopping-cart\"></i>\n          </span>\n              </Link>\n            </button>\n          </div>\n   \n          <div className=\"bars\">\n\n          <i className=\"fas fa-bars\" onClick={this.menu}></i>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport store from '../redux'\nimport { Link } from \"react-router-dom\";\nimport $ from 'jquery'\nimport uuid from 'uuid'\n\nexport class ProductDetails extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             loading: true\n        }\n        var int;\n        this.int = setInterval( () => {if(store.getState().firstReducer.ProdDetails.id !== undefined) {\n            this.setState({\n                  loading: false\n            })\n            clearInterval(int)\n        }\n          },500)\n    }\n    \n    componentDidMount(){\n        this.unsubscribe = store.subscribe(() => this.forceUpdate());\n      }\n      componentWillUnmount(){\n        clearInterval(this.int)\n        this.unsubscribe();\n      }\n\n    AddtoCart = () => {\n        store.dispatch({\n            type: \"ADD_ITEM\",\n            product: store.getState().firstReducer.ProdDetails,\n            id: uuid()\n          })\n         $(\".addCart\").animate({marginLeft: '-600px', display: 'show'}, \"slow\");\n         setTimeout(function(){ $(\".addCart\").animate({marginLeft: '0px'}, \"slow\") }, 2000);   \n    }\n    render() {\n        if(this.state.loading === true){\n            return <div className=\"Loading\"><i className=\"fas fa-spinner\"></i></div>\n        }\n        const {title, img, price, rating, description} = store.getState().firstReducer.ProdDetails\n\n        return (\n        <div className=\"productDetailsContainer\">\n            <div className=\"productDetails\">\n                <div className=\"productImg\"><img alt=\"product\"src={img}></img></div>\n                <div><h1>{title}</h1></div>\n                <div><h2>${price}</h2></div>\n                <div>{description}</div>\n                <div><h2>{rating}/5</h2></div>\n                <div className=\"lr\">\n                    <Link className=\"button\" to=\"/shop/\">Back to Shop</Link>\n                    <div className=\"button\" onClick={() => this.AddtoCart()}>Add to Cart</div>\n                </div>\n                <div className=\"addCart\">Added to Cart</div>\n            </div>\n        </div>  \n        )\n        }\n    }\n\n\nexport default ProductDetails\n","import React from 'react';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport Home from './Components/Home';\nimport Cart from './Components/Cart';\nimport Shop from './Components/Shop';\nimport store from './redux'\nimport Header from './Components/Header'\nimport './App.css';\nimport ProductDetails from './Components/ProductDetails';\nimport history from './Components/history'\n\n\n\n\nclass App extends React.Component{\n\n  componentDidMount() {\n    fetch(\"https://my-json-server.typicode.com/tdmichaelis/typicode/products\")\n      .then(res => res.json())\n      .then(json => {\n        store.dispatch({\n          type: \"INIT_API\",\n          Product: json\n        })\n        \n      })\n}\n\n  render(){\n\n    return (\n      <div className=\"App\">\n          <Router history={history}>\n          <Header />\n            <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/shop' component={Shop} />\n                <Route path='/cart' component={Cart} />\n                <Route path='/itemdetails/:id' component = {ProductDetails} />\n           </Switch>\n          \n        </Router>\n      </div>\n    );\n  }\n  \n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}